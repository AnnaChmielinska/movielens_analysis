version: "3.6"
volumes:
  postgresql_data:
    driver: local
  shared_hdfs_workspace:
    name: "hadoop-distributed-file-system"
    driver: local

services:

  # PostgreSQL database (ingestion)
  postgresql-db:
    image: postgres:${POSTGRES_TAG}
    container_name: postgresql-db
    hostname: postgresql-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
      - '../resources:/movielens_database/landing_zone'
      - '../movielens_database/ddl:/docker-entrypoint-initdb.d/'
      - '../movielens_database/dml:/movielens_database/dml'
    restart: always

  # Spark standalone cluster (analytics)
  spark-master:
    image: bde2020/spark-master:${SPARK_TAG}
    container_name: spark-master
    hostname: spark-master
    ports:
      - ${SPARK_MASTER_UI_PORT}:${SPARK_MASTER_UI_PORT}
      - 7080:7077
    volumes:
      - shared_hdfs_workspace:/opt/workspace
      - ../movies_analysis:/opt/workspace/movies_analysis
    working_dir: /opt/workspace
  spark-worker-1:
    image: bde2020/spark-worker:${SPARK_TAG}
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1g
    ports:
      - 8081:8081
    volumes:
      - shared_hdfs_workspace:/opt/workspace
    depends_on:
      - spark-master
  spark-worker-2:
    image: bde2020/spark-worker:${SPARK_TAG}
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1g
    ports:
      - 8082:8082
    volumes:
      - shared_hdfs_workspace:/opt/workspace
    depends_on:
      - spark-master

  # Jupyter notebook
  jupyter-notebook:
    image: jupyter/pyspark-notebook:${JUPYTER_TAG}
    container_name: jupyter-notebook
    environment:
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
    ports:
      - ${JUPYTER_PORT}:${JUPYTER_PORT}
    volumes:
      - ../movies_analysis:/home/jovyan/work
    command: [ "start-notebook.sh", "--NotebookApp.token=$JUPYTER_TOKEN" ]
    restart: always
